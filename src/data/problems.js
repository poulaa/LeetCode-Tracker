const problems = [
  { name: "Merge Sorted Array", category: "Array / String", difficulty: "Easy" },
  { name: "Remove Element", category: "Array / String", difficulty: "Easy" },
  { name: "Remove Duplicates from Sorted Array", category: "Array / String", difficulty: "Easy" },
  { name: "Remove Duplicates from Sorted Array II", category: "Array / String", difficulty: "Medium" },
  { name: "Majority Element", category: "Array / String", difficulty: "Easy" },
  { name: "Rotate Array", category: "Array / String", difficulty: "Medium" },
  { name: "Best Time to Buy and Sell Stock", category: "Array / String", difficulty: "Easy" },
  { name: "Best Time to Buy and Sell Stock II", category: "Array / String", difficulty: "Medium" },
  { name: "Jump Game", category: "Array / String", difficulty: "Medium" },
  { name: "Jump Game II", category: "Array / String", difficulty: "Medium" },
  { name: "H-Index", category: "Array / String", difficulty: "Medium" },
  { name: "Insert Delete GetRandom O(1)", category: "Array / String", difficulty: "Medium" },
  { name: "Product of Array Except Self", category: "Array / String", difficulty: "Medium" },
  { name: "Gas Station", category: "Array / String", difficulty: "Medium" },
  { name: "Candy", category: "Array / String", difficulty: "Hard" },
  { name: "Trapping Rain Water", category: "Array / String", difficulty: "Hard" },
  { name: "Roman to Integer", category: "Array / String", difficulty: "Easy" },
  { name: "Integer to Roman", category: "Array / String", difficulty: "Medium" },
  { name: "Length of Last Word", category: "Array / String", difficulty: "Easy" },
  { name: "Longest Common Prefix", category: "Array / String", difficulty: "Easy" },
  { name: "Reverse Words in a String", category: "Array / String", difficulty: "Medium" },
  { name: "Zigzag Conversion", category: "Array / String", difficulty: "Medium" },
  { name: "Find the Index of the First Occurrence in a String", category: "Array / String", difficulty: "Easy" },
  { name: "Text Justification", category: "Array / String", difficulty: "Hard" },
  { name: "Valid Palindrome", category: "Two Pointers", difficulty: "Easy" },
  { name: "Is Subsequence", category: "Two Pointers", difficulty: "Easy" },
  { name: "Two Sum II - Input Array Is Sorted", category: "Two Pointers", difficulty: "Medium" },
  { name: "Container With Most Water", category: "Two Pointers", difficulty: "Medium" },
  { name: "3Sum", category: "Two Pointers", difficulty: "Medium" },
  { name: "Minimum Size Subarray Sum", category: "Sliding Window", difficulty: "Medium" },
  { name: "Longest Substring Without Repeating Characters", category: "Sliding Window", difficulty: "Medium" },
  { name: "Substring with Concatenation of All Words", category: "Sliding Window", difficulty: "Hard" },
  { name: "Minimum Window Substring", category: "Sliding Window", difficulty: "Hard" },
  { name: "Valid Sudoku", category: "Matrix", difficulty: "Medium" },
  { name: "Spiral Matrix", category: "Matrix", difficulty: "Medium" },
  { name: "Rotate Image", category: "Matrix", difficulty: "Medium" },
  { name: "Set Matrix Zeroes", category: "Matrix", difficulty: "Medium" },
  { name: "Game of Life", category: "Matrix", difficulty: "Medium" },
  { name: "Ransom Note", category: "Hashmap", difficulty: "Easy" },
  { name: "Isomorphic Strings", category: "Hashmap", difficulty: "Easy" },
  { name: "Word Pattern", category: "Hashmap", difficulty: "Easy" },
  { name: "Valid Anagram", category: "Hashmap", difficulty: "Easy" },
  { name: "Group Anagrams", category: "Hashmap", difficulty: "Medium" },
  { name: "Two Sum", category: "Hashmap", difficulty: "Easy" },
  { name: "Happy Number", category: "Hashmap", difficulty: "Easy" },
  { name: "Contains Duplicate II", category: "Hashmap", difficulty: "Easy" },
  { name: "Longest Consecutive Sequence", category: "Hashmap", difficulty: "Medium" },
  { name: "Summary Ranges", category: "Intervals", difficulty: "Easy" },
  { name: "Merge Intervals", category: "Intervals", difficulty: "Medium" },
  { name: "Insert Interval", category: "Intervals", difficulty: "Medium" },
  { name: "Minimum Number of Arrows to Burst Balloons", category: "Intervals", difficulty: "Medium" },
  { name: "Valid Parentheses", category: "Stack", difficulty: "Easy" },
  { name: "Simplify Path", category: "Stack", difficulty: "Medium" },
  { name: "Min Stack", category: "Stack", difficulty: "Medium" },
  { name: "Evaluate Reverse Polish Notation", category: "Stack", difficulty: "Medium" },
  { name: "Basic Calculator", category: "Stack", difficulty: "Hard" },
  { name: "Linked List Cycle", category: "Linked List", difficulty: "Easy" },
  { name: "Add Two Numbers", category: "Linked List", difficulty: "Medium" },
  { name: "Merge Two Sorted Lists", category: "Linked List", difficulty: "Easy" },
  { name: "Copy List with Random Pointer", category: "Linked List", difficulty: "Medium" },
  { name: "Reverse Linked List II", category: "Linked List", difficulty: "Medium" },
  { name: "Reverse Nodes in k-Group", category: "Linked List", difficulty: "Hard" },
  { name: "Remove Nth Node From End of List", category: "Linked List", difficulty: "Medium" },
  { name: "Remove Duplicates from Sorted List II", category: "Linked List", difficulty: "Medium" },
  { name: "Rotate List", category: "Linked List", difficulty: "Medium" },
  { name: "Partition List", category: "Linked List", difficulty: "Medium" },
  { name: "LRU Cache", category: "Linked List", difficulty: "Medium" },
  { name: "Maximum Depth of Binary Tree", category: "Binary Tree General", difficulty: "Easy" },
  { name: "Same Tree", category: "Binary Tree General", difficulty: "Easy" },
  { name: "Invert Binary Tree", category: "Binary Tree General", difficulty: "Easy" },
  { name: "Symmetric Tree", category: "Binary Tree General", difficulty: "Easy" },
  { name: "Construct Binary Tree from Preorder and Inorder Traversal", category: "Binary Tree General", difficulty: "Medium" },
  { name: "Construct Binary Tree from Inorder and Postorder Traversal", category: "Binary Tree General", difficulty: "Medium" },
  { name: "Populating Next Right Pointers in Each Node II", category: "Binary Tree General", difficulty: "Medium" },
  { name: "Flatten Binary Tree to Linked List", category: "Binary Tree General", difficulty: "Medium" },
  { name: "Path Sum", category: "Binary Tree General", difficulty: "Easy" },
  { name: "Sum Root to Leaf Numbers", category: "Binary Tree General", difficulty: "Medium" },
  { name: "Binary Tree Maximum Path Sum", category: "Binary Tree General", difficulty: "Hard" },
  { name: "Binary Search Tree Iterator", category: "Binary Tree General", difficulty: "Medium" },
  { name: "Count Complete Tree Nodes", category: "Binary Tree General", difficulty: "Easy" },
  { name: "Lowest Common Ancestor of a Binary Tree", category: "Binary Tree General", difficulty: "Medium" },
  { name: "Binary Tree Right Side View", category: "Binary Tree BFS", difficulty: "Medium" },
  { name: "Average of Levels in Binary Tree", category: "Binary Tree BFS", difficulty: "Easy" },
  { name: "Binary Tree Level Order Traversal", category: "Binary Tree BFS", difficulty: "Medium" },
  { name: "Binary Tree Zigzag Level Order Traversal", category: "Binary Tree BFS", difficulty: "Medium" },
  { name: "Minimum Absolute Difference in BST", category: "Binary Search Tree", difficulty: "Easy" },
  { name: "Kth Smallest Element in a BST", category: "Binary Search Tree", difficulty: "Medium" },
  { name: "Validate Binary Search Tree", category: "Binary Search Tree", difficulty: "Medium" },
  { name: "Number of Islands", category: "Graph General", difficulty: "Medium" },
  { name: "Surrounded Regions", category: "Graph General", difficulty: "Medium" },
  { name: "Clone Graph", category: "Graph General", difficulty: "Medium" },
  { name: "Evaluate Division", category: "Graph General", difficulty: "Medium" },
  { name: "Course Schedule", category: "Graph General", difficulty: "Medium" },
  { name: "Course Schedule II", category: "Graph General", difficulty: "Medium" },
  { name: "Snakes and Ladders", category: "Graph BFS", difficulty: "Medium" },
  { name: "Minimum Genetic Mutation", category: "Graph BFS", difficulty: "Medium" },
  { name: "Word Ladder", category: "Graph BFS", difficulty: "Hard" },
  { name: "Implement Trie (Prefix Tree)", category: "Trie", difficulty: "Medium" },
  { name: "Design Add and Search Words Data Structure", category: "Trie", difficulty: "Medium" },
  { name: "Word Search II", category: "Trie", difficulty: "Hard" },
  { name: "Letter Combinations of a Phone Number", category: "Backtracking", difficulty: "Medium" },
  { name: "Combinations", category: "Backtracking", difficulty: "Medium" },
  { name: "Permutations", category: "Backtracking", difficulty: "Medium" },
  { name: "Combination Sum", category: "Backtracking", difficulty: "Medium" },
  { name: "N-Queens II", category: "Backtracking", difficulty: "Hard" },
  { name: "Generate Parentheses", category: "Backtracking", difficulty: "Medium" },
  { name: "Word Search", category: "Backtracking", difficulty: "Medium" },
  { name: "Convert Sorted Array to Binary Search Tree", category: "Divide & Conquer", difficulty: "Easy" },
  { name: "Sort List", category: "Divide & Conquer", difficulty: "Medium" },
  { name: "Construct Quad Tree", category: "Divide & Conquer", difficulty: "Medium" },
  { name: "Merge k Sorted Lists", category: "Divide & Conquer", difficulty: "Hard" },
  { name: "Maximum Subarray", category: "Kadane's Algorithm", difficulty: "Medium" },
  { name: "Maximum Sum Circular Subarray", category: "Kadane's Algorithm", difficulty: "Medium" },
  { name: "Search Insert Position", category: "Binary Search", difficulty: "Easy" },
  { name: "Search a 2D Matrix", category: "Binary Search", difficulty: "Medium" },
  { name: "Find Peak Element", category: "Binary Search", difficulty: "Medium" },
  { name: "Search in Rotated Sorted Array", category: "Binary Search", difficulty: "Medium" },
  { name: "Find First and Last Position of Element in Sorted Array", category: "Binary Search", difficulty: "Medium" },
  { name: "Find Minimum in Rotated Sorted Array", category: "Binary Search", difficulty: "Medium" },
  { name: "Median of Two Sorted Arrays", category: "Binary Search", difficulty: "Hard" },
  { name: "Kth Largest Element in an Array", category: "Heap", difficulty: "Medium" },
  { name: "IPO", category: "Heap", difficulty: "Hard" },
  { name: "Find K Pairs with Smallest Sums", category: "Heap", difficulty: "Medium" },
  { name: "Find Median from Data Stream", category: "Heap", difficulty: "Hard" },
  { name: "Add Binary", category: "Bit Manipulation", difficulty: "Easy" },
  { name: "Reverse Bits", category: "Bit Manipulation", difficulty: "Easy" },
  { name: "Number of 1 Bits", category: "Bit Manipulation", difficulty: "Easy" },
  { name: "Single Number", category: "Bit Manipulation", difficulty: "Easy" },
  { name: "Single Number II", category: "Bit Manipulation", difficulty: "Medium" },
  { name: "Bitwise AND of Numbers Range", category: "Bit Manipulation", difficulty: "Medium" },
  { name: "Palindrome Number", category: "Math", difficulty: "Easy" },
  { name: "Plus One", category: "Math", difficulty: "Easy" },
  { name: "Factorial Trailing Zeroes", category: "Math", difficulty: "Medium" },
  { name: "Sqrt(x)", category: "Math", difficulty: "Easy" },
  { name: "Pow(x, n)", category: "Math", difficulty: "Medium" },
  { name: "Max Points on a Line", category: "Math", difficulty: "Hard" },
  { name: "Climbing Stairs", category: "1D DP", difficulty: "Easy" },
  { name: "House Robber", category: "1D DP", difficulty: "Medium" },
  { name: "Word Break", category: "1D DP", difficulty: "Medium" },
  { name: "Coin Change", category: "1D DP", difficulty: "Medium" },
  { name: "Longest Increasing Subsequence", category: "1D DP", difficulty: "Medium" },
  { name: "Triangle", category: "Multidimensional DP", difficulty: "Medium" },
  { name: "Minimum Path Sum", category: "Multidimensional DP", difficulty: "Medium" },
  { name: "Unique Paths II", category: "Multidimensional DP", difficulty: "Medium" },
  { name: "Longest Palindromic Substring", category: "Multidimensional DP", difficulty: "Medium" },
  { name: "Interleaving String", category: "Multidimensional DP", difficulty: "Medium" },
  { name: "Edit Distance", category: "Multidimensional DP", difficulty: "Medium" },
  { name: "Best Time to Buy and Sell Stock III", category: "Multidimensional DP", difficulty: "Hard" },
  { name: "Best Time to Buy and Sell Stock IV", category: "Multidimensional DP", difficulty: "Hard" },
  { name: "Maximal Square", category: "Multidimensional DP", difficulty: "Medium" },
];

export default problems;